Реализовать верхнеуровневую функцию, которая:
 - преобразует очищенный от комментариев и лишних переносов .inc-файл (или исходный - на ваше усмотрение, но в тесте будет очищенный) в конструкцию списка из списков строк, которую затем легко будет перевести в .csv-файл.
Внутри неё будут вызываться все остальные функции, которые мы разбирали на паре, которые вы как раз и должны закодить, 
и которые будут связывать её с низкоуровневыми parse_keyword_DATE_line, parse_keyword_COMPDAT_line и parse_keyword_COMPDATL_line

Чтобы понять, посмотрите на тест, который она должна проходить, и на входной файл handled_schedule.inc в папке data.
Если вы решите, что ваша функция должна возвращать словарь или иную более удобную вам структуру вместо List[List[str]], или выдаёт что-то похожее, но не то - напишите мне, подправим тест.

Функция должна успешно проходить тесты из файла pytest_schedule_parser_unit_line.py
Там лежат и тесты с прошлого раза.

Описание функции - как это было сделано у меня:

def parse_schedule(text: str, keywords_tuple=("DATES", "COMPDAT", "COMPDATL"): Tuple[str]) -> List[List[str]]:
    """
    returns keywords text blocks ending with a newline "/"
    @param text: cleaned input text from .inc file
    @param keywords_tuple: a tuple of keywords we are interested in (DATES, COMPDAT, COMPDATL, etc.)
    @return: list keywords text blocks ending with a newline "/"
    """
P.S.: второй аргумент функции на всякий случай хранит интересные нам ключевые слова, но вы можете захардкодить их внутри самой функции
P.P.S.: я захардкодил внутри функции "END", не передавая его в качестве аргумента